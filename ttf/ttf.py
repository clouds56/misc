# %%
import numpy as np
from PIL import Image, ImageFont, ImageDraw

# %% config
width, height = 8, 16
font, font_size = "JetBrainsMono-Regular.ttf", 13
sample_str = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
len(sample_str)
# %%
font = ImageFont.truetype(font, font_size)
def getimage(s):
  image = Image.new('1', (width*len(s), height), color='white')
  draw = ImageDraw.Draw(image)
  draw.text((0, -1), s, font=font)
  return image
image = getimage(sample_str)
image
# %%
data = np.array(image)
for k, c in enumerate(sample_str):
  d = data[:, k*width:(k+1)*width].astype(int)
  result = []
  for i in range(width):
    result.append('%02x' % int(''.join(str(x) for x in d[:, i]), 2))
  print(f"{{ {', '.join('0x'+x for x in result)} }}, // {k}, {c}")

# %%
"""
{ 0xffff, 0xf00f, 0xe7e7, 0xeef7, 0xeef7, 0xe7e7, 0xf81f, 0xffff }, // 0, 0
{ 0xffff, 0xfbf7, 0xf7f7, 0xeff7, 0xe007, 0xfff7, 0xfff7, 0xffff }, // 1, 1
{ 0xffff, 0xf3e7, 0xe7c7, 0xef97, 0xef37, 0xe077, 0xf9f7, 0xffff }, // 2, 2
{ 0xffff, 0xefcf, 0xefe7, 0xe9f7, 0xe9f7, 0xe40f, 0xff1f, 0xffff }, // 3, 3
{ 0xffff, 0xff1f, 0xfc5f, 0xf9df, 0xe7df, 0xee07, 0xfe07, 0xffff }, // 4, 4
{ 0xffff, 0xe0ef, 0xeee7, 0xedf7, 0xedf7, 0xec47, 0xff1f, 0xffff }, // 5, 5
{ 0xffff, 0xfe0f, 0xfce7, 0xf1f7, 0xedf7, 0xfce7, 0xfe1f, 0xffff }, // 6, 6
{ 0xffff, 0xe3ff, 0xeff7, 0xefc7, 0xee1f, 0xe8ff, 0xe7ff, 0xffff }, // 7, 7
{ 0xffff, 0xf18f, 0xe467, 0xeef7, 0xee77, 0xe467, 0xf38f, 0xffff }, // 8, 8
{ 0xffff, 0xf0ff, 0xe67f, 0xef67, 0xef0f, 0xe63f, 0xf0ff, 0xffff }, // 9, 9
{ 0xffff, 0xfd8f, 0xf977, 0xfb77, 0xfb77, 0xf807, 0xfe07, 0xffff }, // 10, a
{ 0xffff, 0xe007, 0xfdef, 0xfbf7, 0xfbf7, 0xf8c7, 0xfe1f, 0xffff }, // 11, b
{ 0xffff, 0xfc0f, 0xf9e7, 0xfbf7, 0xfbf7, 0xf9e7, 0xfedf, 0xffff }, // 12, c
{ 0xffff, 0xfc0f, 0xf9e7, 0xfbf7, 0xfbf7, 0xe007, 0xe007, 0xffff }, // 13, d
{ 0xffff, 0xfc0f, 0xf967, 0xfb77, 0xfb77, 0xf967, 0xfe6f, 0xffff }, // 14, e
{ 0xffff, 0xfdff, 0xfdff, 0xe007, 0xedff, 0xedff, 0xedff, 0xffff }, // 15, f
{ 0xffff, 0xfc0f, 0xf9e6, 0xfbf6, 0xfbf6, 0xf800, 0xf803, 0xffff }, // 16, g
{ 0xffff, 0xe007, 0xfdff, 0xfbff, 0xfbff, 0xf807, 0xfe07, 0xffff }, // 17, h
{ 0xffff, 0xfbf7, 0xfbf7, 0xcbf7, 0xc807, 0xfff7, 0xfff7, 0xffff }, // 18, i
{ 0xffff, 0xfbfe, 0xfbfe, 0xfbfe, 0xc801, 0xc803, 0xffff, 0xffff }, // 19, j
{ 0xffff, 0xe007, 0xff7f, 0xff7f, 0xfe3f, 0xfdcf, 0xfbf7, 0xffff }, // 20, k
{ 0xefff, 0xefff, 0xefff, 0xe00f, 0xfff7, 0xfff7, 0xfff7, 0xffff }, // 21, l
{ 0xffff, 0xf807, 0xfbff, 0xf807, 0xfdff, 0xfbff, 0xf807, 0xffff }, // 22, m
{ 0xffff, 0xf807, 0xfdff, 0xfbff, 0xfbff, 0xf807, 0xfe07, 0xffff }, // 23, n
{ 0xffff, 0xfc0f, 0xf9e7, 0xfbf7, 0xfbf7, 0xf8c7, 0xfe1f, 0xffff }, // 24, o
{ 0xffff, 0xf800, 0xfdef, 0xfbf7, 0xfbf7, 0xf8c7, 0xfe1f, 0xffff }, // 25, p
{ 0xffff, 0xfc0f, 0xf9e7, 0xfbf7, 0xfbf7, 0xf800, 0xf800, 0xffff }, // 26, q
{ 0xffff, 0xf807, 0xf807, 0xfbff, 0xfbff, 0xf9ff, 0xfcff, 0xffff }, // 27, r
{ 0xffff, 0xfcef, 0xf867, 0xfb77, 0xfb37, 0xf9a7, 0xfd8f, 0xffff }, // 28, s
{ 0xffff, 0xfbff, 0xfbff, 0xe007, 0xfbf7, 0xfbf7, 0xfbf7, 0xffff }, // 29, t
{ 0xffff, 0xf80f, 0xffe7, 0xfff7, 0xfff7, 0xf807, 0xf81f, 0xffff }, // 30, u
{ 0xffff, 0xf8ff, 0xfe1f, 0xffc7, 0xffc7, 0xfc3f, 0xf9ff, 0xffff }, // 31, v
{ 0xfbff, 0xf80f, 0xffc7, 0xf83f, 0xf81f, 0xffe7, 0xf81f, 0xffff }, // 32, w
{ 0xffff, 0xfbf7, 0xfccf, 0xfe3f, 0xfe1f, 0xf9c7, 0xfbf7, 0xffff }, // 33, x
{ 0xffff, 0xf9ff, 0xfe3e, 0xffc0, 0xff87, 0xfc3f, 0xf9ff, 0xffff }, // 34, y
{ 0xffff, 0xfbe7, 0xfbc7, 0xfb37, 0xfa77, 0xf8f7, 0xfff7, 0xffff }, // 35, z
{ 0xffff, 0xffc7, 0xfc3f, 0xe3bf, 0xe1bf, 0xfc1f, 0xffc7, 0xffff }, // 36, A
{ 0xffff, 0xe007, 0xeef7, 0xeef7, 0xeef7, 0xe567, 0xf38f, 0xffff }, // 37, B
{ 0xffff, 0xf00f, 0xe7e7, 0xeff7, 0xeff7, 0xe7e7, 0xfbdf, 0xffff }, // 38, C
{ 0xffff, 0xe007, 0xeff7, 0xeff7, 0xeff7, 0xf00f, 0xf81f, 0xffff }, // 39, D
{ 0xffff, 0xe007, 0xeef7, 0xeef7, 0xeef7, 0xeef7, 0xeff7, 0xffff }, // 40, E
{ 0xffff, 0xe007, 0xeeff, 0xeeff, 0xeeff, 0xeeff, 0xefff, 0xffff }, // 41, F
{ 0xffff, 0xf00f, 0xe7e7, 0xeff7, 0xef77, 0xe767, 0xfb0f, 0xffff }, // 42, G
{ 0xffff, 0xe007, 0xfeff, 0xfeff, 0xfeff, 0xe007, 0xe007, 0xffff }, // 43, H
{ 0xffff, 0xeff7, 0xeff7, 0xe007, 0xe007, 0xeff7, 0xffff, 0xffff }, // 44, I
{ 0xffff, 0xffcf, 0xfff7, 0xeff7, 0xeff7, 0xe00f, 0xffff, 0xffff }, // 45, J
{ 0xffff, 0xe007, 0xfeff, 0xfeff, 0xfc3f, 0xf38f, 0xefe7, 0xffff }, // 46, K
{ 0xffff, 0xe007, 0xe007, 0xfff7, 0xfff7, 0xfff7, 0xfff7, 0xffff }, // 47, L
{ 0xffff, 0xe007, 0xe3ff, 0xfc7f, 0xf8ff, 0xe7ff, 0xe007, 0xffff }, // 48, M
{ 0xffff, 0xe007, 0xe7ff, 0xf8ff, 0xff1f, 0xe067, 0xe007, 0xffff }, // 49, N
{ 0xffff, 0xf00f, 0xe7e7, 0xeff7, 0xeff7, 0xe007, 0xf81f, 0xffff }, // 50, O
{ 0xffff, 0xe007, 0xef7f, 0xef7f, 0xef7f, 0xe67f, 0xf0ff, 0xffff }, // 51, P
{ 0xffff, 0xf00f, 0xe7e7, 0xeff7, 0xeff3, 0xe7e0, 0xf81e, 0xffff }, // 52, Q
{ 0xffff, 0xe007, 0xeeff, 0xeeff, 0xee3f, 0xe48f, 0xf1f7, 0xffff }, // 53, R
{ 0xffff, 0xf1cf, 0xe4e7, 0xeef7, 0xee77, 0xe727, 0xf38f, 0xffff }, // 54, S
{ 0xffff, 0xefff, 0xefff, 0xe007, 0xefff, 0xefff, 0xefff, 0xffff }, // 55, T
{ 0xffff, 0xe00f, 0xffe7, 0xfff7, 0xfff7, 0xe007, 0xe01f, 0xffff }, // 56, U
{ 0xffff, 0xe3ff, 0xfc1f, 0xffc7, 0xff87, 0xf83f, 0xe3ff, 0xffff }, // 57, V
{ 0xe7ff, 0xf007, 0xff87, 0xe07f, 0xe03f, 0xffc7, 0xe00f, 0xffff }, // 58, W
{ 0xffff, 0xe7e7, 0xf18f, 0xfc3f, 0xfc3f, 0xf3cf, 0xeff7, 0xffff }, // 59, X
{ 0xefff, 0xe7ff, 0xf8ff, 0xfe07, 0xfe7f, 0xf1ff, 0xe7ff, 0xffff }, // 60, Y
{ 0xffff, 0xefe7, 0xef97, 0xee37, 0xecf7, 0xe3f7, 0xeff7, 0xffff }, // 61, Z
"""
